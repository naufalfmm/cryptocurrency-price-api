// Code generated by MockGen. DO NOT EDIT.
// Source: init.go

// Package userCoins is a generated GoMock package.
package userCoins

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dao "github.com/naufalfmm/cryptocurrency-price-api/model/dao"
	dto "github.com/naufalfmm/cryptocurrency-price-api/model/dto"
)

// MockUsecases is a mock of Usecases interface.
type MockUsecases struct {
	ctrl     *gomock.Controller
	recorder *MockUsecasesMockRecorder
}

// MockUsecasesMockRecorder is the mock recorder for MockUsecases.
type MockUsecasesMockRecorder struct {
	mock *MockUsecases
}

// NewMockUsecases creates a new mock instance.
func NewMockUsecases(ctrl *gomock.Controller) *MockUsecases {
	mock := &MockUsecases{ctrl: ctrl}
	mock.recorder = &MockUsecasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecases) EXPECT() *MockUsecasesMockRecorder {
	return m.recorder
}

// GetAllTrack mocks base method.
func (m *MockUsecases) GetAllTrack(ctx context.Context, req dto.GetAllTrackRequest) ([]dao.UserCoin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTrack", ctx, req)
	ret0, _ := ret[0].([]dao.UserCoin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTrack indicates an expected call of GetAllTrack.
func (mr *MockUsecasesMockRecorder) GetAllTrack(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTrack", reflect.TypeOf((*MockUsecases)(nil).GetAllTrack), ctx, req)
}

// TrackCoin mocks base method.
func (m *MockUsecases) TrackCoin(ctx context.Context, req dto.TrackUntrackCoinRequest) (dao.UserCoin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TrackCoin", ctx, req)
	ret0, _ := ret[0].(dao.UserCoin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TrackCoin indicates an expected call of TrackCoin.
func (mr *MockUsecasesMockRecorder) TrackCoin(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TrackCoin", reflect.TypeOf((*MockUsecases)(nil).TrackCoin), ctx, req)
}

// UntrackCoin mocks base method.
func (m *MockUsecases) UntrackCoin(ctx context.Context, req dto.TrackUntrackCoinRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntrackCoin", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// UntrackCoin indicates an expected call of UntrackCoin.
func (mr *MockUsecasesMockRecorder) UntrackCoin(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntrackCoin", reflect.TypeOf((*MockUsecases)(nil).UntrackCoin), ctx, req)
}
